name: "SimpleTZ: Test Build and Execution"
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - SimpleTrustZone/**
      - .github/workflows/SimpleTZ-CI.yml
  push:
    branches: [main]
    paths:
      - SimpleTrustZone/**
      - .github/workflows/SimpleTZ-CI.yml
  schedule:
    - cron: '00 20 * * 6'

jobs:
  Build:
    strategy:
      matrix:

        compiler: [
          {name: AC6, ext: axf},
          {name: GCC, ext: elf}
        ]
        build: [ 
          {type: Release},
          {type: Debug}
        ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tools
        uses: ARM-software/cmsis-actions/vcpkg@v1
        with:
          config: ".ci/vcpkg-configuration.json"

      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1

      - name: Build project CM33_s and CM33_ns for build-type ${{ matrix.build.type }} with ${{ matrix.compiler.name }}
        working-directory: ./SimpleTrustZone/
        run: cbuild SimpleTZ.csolution.yml --update-rte --packs --context .${{ matrix.build.type }}+CS300 --toolchain ${{ matrix.compiler.name }}

      - name: Execute project CM33_s and CM33_ns for build-type ${{ matrix.build.type }} with ${{ matrix.compiler.name }} using FVP_Corstone_SSE-300
        working-directory: ./SimpleTrustZone/
        run: |
            FVP_Corstone_SSE-300 \
            -a ./out/CM33_s/CS300/${{ matrix.build.type }}/CM33_s.${{ matrix.compiler.ext }} \
            -a ./out/CM33_ns/CS300/${{ matrix.build.type }}/CM33_ns.${{ matrix.compiler.ext }} \
            -f ./../FVP/FVP_Corstone_SSE-300/fvp_config.txt \
            -C mps3_board.uart0.out_file=./out/${{ matrix.compiler.name }}_${{ matrix.build.type }}_fvp_stdout.log \
            --simlimit 60 --stat
            echo " Show simulation UART output for project CM33_s and CM33_s"
            cat ./out/${{ matrix.compiler.name }}_${{ matrix.build.type }}_fvp_stdout.log